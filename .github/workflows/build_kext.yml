name: Build_Kext

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/*/*.zip
      - name: Upload build
        uses: svenstaro/upload-release-action@2.9.0
        if: github.event_name != 'pull_request'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*/*.zip
          tag: ${{ github.event_name == 'release' && github.ref || 'nightly' }}
          body: ${{ github.event_name != 'release' && github.event.head_commit.message || '' }}
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          overwrite: true
